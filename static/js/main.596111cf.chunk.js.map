{"version":3,"sources":["components/Pages/HomePage.tsx","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","api.ts","components/Pages/PeoplePage.tsx","components/Pages/NotFoundPage.tsx","components/PageNavLink.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["HomePage","_jsx","className","children","Loader","PersonLink","_ref","person","isPersonFemale","sex","Link","to","concat","slug","classNames","name","PeopleTable","people","_useParams$selectedSl","useParams","selectedSlug","_jsxs","map","personMother","find","mother","motherName","personFather","father","fatherName","born","died","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","_useState","useState","_useState2","_slicedToArray","setPeople","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","isError","setIsError","getLoadedPeople","_asyncToGenerator","_regeneratorRuntime","mark","_callee","loadedPeople","wrap","_context","prev","next","sent","t0","finish","stop","apply","arguments","useEffect","isPeopleListEmpty","length","isPeopleListNotEmpty","_Fragment","NotFoundPage","PageNavLink","text","NavLink","_ref2","isActive","Navbar","role","App","Routes","Route","path","element","Navigate","replace","index","createRoot","document","getElementById","render","Router"],"mappings":"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","file":"static/js/main.596111cf.chunk.js","sourcesContent":["import { FC } from 'react';\n\nexport const HomePage: FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  const isPersonFemale = person.sex === 'f';\n\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={classNames({ 'has-text-danger': isPersonFemale })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  const { selectedSlug = '' } = useParams();\n  const tableHeader = ['Name', 'Sex', 'Born', 'Died', 'Mother', 'Father'];\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {tableHeader.map(name => <th>{name}</th>)}\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const personMother\n          = people.find(mother => mother.name === person.motherName);\n          const personFather\n          = people.find(father => father.name === person.fatherName);\n\n          return (\n            <tr\n              key={person.slug}\n              data-cy=\"person\"\n              className={classNames(\n                { 'has-background-warning': selectedSlug === person.slug },\n              )}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>\n                {personMother ? (\n                  <PersonLink\n                    person={personMother}\n                  />\n                ) : (\n                  person.motherName || '-'\n                )}\n              </td>\n              <td>\n                {personFather ? (\n                  <PersonLink\n                    person={personFather}\n                  />\n                ) : (\n                  person.fatherName || '-'\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { FC, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\nimport { PeopleTable } from '../PeopleTable';\nimport { getPeople } from '../../api';\n\nexport const PeoplePage: FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const getLoadedPeople = async () => {\n    try {\n      setIsLoading(true);\n      const loadedPeople = await getPeople();\n\n      setPeople(loadedPeople);\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getLoadedPeople();\n  }, []);\n\n  const isPeopleListEmpty = !people.length && !isLoading;\n  const isPeopleListNotEmpty = people.length > 0 && !isLoading;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isPeopleListEmpty && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isPeopleListNotEmpty && <PeopleTable people={people} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { FC } from 'react';\n\nexport const NotFoundPage: FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  to: string;\n  text: string;\n}\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      className={({ isActive }) => classNames(\n        'navbar-item', {\n          'has-background-grey-lighter': isActive,\n        },\n      )}\n      to={to}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import { FC } from 'react';\nimport { PageNavLink } from './PageNavLink';\n\nexport const Navbar: FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Routes, Route, Navigate } from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './components/Pages/HomePage';\nimport { PeoplePage } from './components/Pages/PeoplePage';\nimport { NotFoundPage } from './components/Pages/NotFoundPage';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":selectedSlug\" element={<PeoplePage />} />\n          </Route>\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}